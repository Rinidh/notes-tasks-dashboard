fetch quotes, show in dialog & make into note if accepted




----------------------
See https://chatgpt.com/c/68cff80b-ad88-8333-b573-5f559562c2fe for code example & extra cool additions to make

üìå Mini Project Idea: Notes & Tasks Dashboard with API Integration:

A small app that lets users:

Fetch suggested motivational quotes (from an external API).
  A button for fetching a random quote (turns into note) & a button for creating new note

Create personal notes or tasks (stored in local state).
  Arrange all notes in grid

Use a reducer for managing task state (add, toggle complete, delete).

Use context to share global settings (like theme or username).

Use refs for input focus. focus directly on textarea on dialog open (user can change note/task manually)

Extract a custom hook for API fetching.

This mimics the functionality of a real productivity app, and you could later integrate it into a larger app (like a personal planner, or even a shop dashboard for tasks/orders).

üõ†Ô∏è Key Hook Usage

useState ‚Üí For local note/task inputs.

useReducer ‚Üí For managing tasks with multiple actions.

useEffect ‚Üí To fetch a motivational quote from an API (like quotable.io
).

useContext ‚Üí Provide global settings (like theme mode: light/dark, or user profile info).

useRef ‚Üí Focus the input box after adding a new task.

Custom Hook ‚Üí useFetchQuote() that handles fetching and error/loading states.

-----------------------
I left out the ability to edit a note/task because it involves creating new dialogs for each card, which opens for you to edit.
Prevent using contentEditable as it invloves more direct DOM rendering with .innerText instead of updating state and passing contents as child to Card (see practice-tutorials/react-simple-form/src/editableDiv.jsx)
If need to add editing ability, rather extract out a <Dialog /> component separately, render it in <App /> and optionally render its contents according to need i.e. fetch a quote or make a new note/task or edit a note/task